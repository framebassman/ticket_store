services:
    store_api:
        build:
            context: .
            dockerfile: ./Services/TicketStore.Api/Dockerfile.Production
        depends_on:
            - fake_sender
        environment:
            - ASPNETCORE_ENVIRONMENT=Test
    store_web:
        build:
            context: .
            dockerfile: ./Services/TicketStore.Web/Dockerfile.Production
            args:
                - REACT_APP_ENVIRONMENT=Test
        environment:
            - ASPNETCORE_ENVIRONMENT=Test
    store_proxy:
        ports:
            - 80:80
            - 8080:8080
        labels:
            - traefik.http.routers.api.rule=Host(`dashboard.localhost`)
    fake_sender:
        image: framebassman/fake-sender:1.2.0
        container_name: fake_sender
        ports:
            - 5050:5050
        expose:
            - 5050
        environment:
          - ASPNETCORE_URLS=http://+:5050
        labels:
            - traefik.enable=true
            - traefik.http.routers.fake_sender.rule=PathPrefix(`/fake_sender`)
            - traefik.http.routers.fake_sender.entrypoints=http-point
        volumes:
            - /var/log/fake_sender:/var/log
    postgres:
        build:
            context: .
            dockerfile: ./Services/Postgres/Dockerfile
        container_name: postgres
        volumes:
            - pgsdata:/var/lib/postgresql/data
        ports:
            - 5432:5432
        logging:
            driver: none
volumes:
    pgsdata:
