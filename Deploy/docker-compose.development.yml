services:
    store_proxy:
        ports:
            - 80:80
            - 8080:8080
        labels:
            - traefik.http.routers.api.rule=Host(`dashboard.localhost`)
    store_api:
        build:
            context: .
            dockerfile: ./Services/TicketStore.Api/Dockerfile.Development
        depends_on:
            - postgres
        ports:
            - 3000:5000
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        volumes:
            - ./Services/TicketStore.Api/Controllers:/app/Controllers:ro
            - ./Services/TicketStore.Api/Middlewares:/app/Middlewares:ro
            - ./Services/TicketStore.Api/Model:/app/Model:ro
    store_web:
        build:
            context: .
            dockerfile: ./Services/TicketStore.Web/Dockerfile.Development
        ports:
            - 4000:5000
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - REACT_APP_ENVIRONMENT=Development
        volumes:
            - ./Services/TicketStore.Web/Client:/app/Client:ro
            - ./Services/TicketStore.Web/Controllers:/app/Controllers:ro
            - ./Services/TicketStore.Web/Pages:/app/Pages:ro
            - ./Services/TicketStore.Web/Model:/app/Model:ro
    postgres:
        build:
            context: .
            dockerfile: ./Services/Postgres/Dockerfile
        container_name: postgres
        volumes:
            - pgsdata:/var/lib/postgresql/data
        ports:
            - 5432:5432
        logging:
            driver: none

volumes:
    pgsdata:
