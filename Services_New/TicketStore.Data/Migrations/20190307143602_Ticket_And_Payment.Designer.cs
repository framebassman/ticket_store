// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketStore.Data;

namespace TicketStore.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190307143602_Ticket_And_Payment")]
    partial class Ticket_And_Payment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TicketStore.Api.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.HasKey("Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("TicketStore.Api.Model.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<bool>("Expired")
                        .HasColumnName("expired");

                    b.Property<string>("Number")
                        .HasColumnName("number");

                    b.Property<int>("PaymentId")
                        .HasColumnName("payment_id");

                    b.Property<decimal>("Roubles")
                        .HasColumnName("roubles");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("TicketStore.Api.Model.Ticket", b =>
                {
                    b.HasOne("TicketStore.Api.Model.Payment", "Payment")
                        .WithMany("Tickets")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
