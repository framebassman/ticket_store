FROM mcr.microsoft.com/dotnet/sdk:7.0.203-alpine3.17
ENV DOTNET_GENERATE_ASPNET_CERTIFICATE=false
# libgdiplus-dev - for bitmap creating and pdf generation
# gcompat, libwkhtmltox.so - for pdf generation
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories \
    && apk update \
    && apk add \
        libgdiplus-dev \
        gcompat \
        curl \
        && curl -o /usr/lib/libwkhtmltox.so \
            --location \
            https://github.com/rdvojmoc/DinkToPdf/raw/v1.1.0/v0.12.4/64%20bit/libwkhtmltox.so
# install font for PDF generation
RUN apk add ttf-liberation && fc-cache -fv
RUN apk add tzdata && ls /usr/share/zoneinfo
RUN dotnet tool install --global dotnet-ef --version 7.0.5
ENV PATH="/root/.dotnet/tools:${PATH}"
# install debugger
RUN apk add unzip procps
RUN curl -sSL https://aka.ms/getvsdbgsh | /bin/sh /dev/stdin -v latest -l ~/vsdbg
# user
ENV USER_ID=1000
ENV GROUP_ID=1000
ENV USER_NAME=deployer
ENV GROUP_NAME=wheel
RUN addgroup -g $GROUP_ID $GROUP_NAME && \
    adduser --shell /sbin/nologin --disabled-password \
    --no-create-home --uid $USER_ID --ingroup $GROUP_NAME $USER_NAME
USER $USER_NAME
# copy code
COPY --chown=deployer:wheel ./Services/TicketStore.Api/ /home/deployer/app
COPY --chown=deployer:wheel ./Services/TicketStore.Data/ /home/deployer/TicketStore.Data
WORKDIR /home/deployer/app
RUN dotnet restore
RUN dotnet build
ENTRYPOINT ["dotnet", "watch", "run"]
